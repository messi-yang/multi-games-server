# 1. Create service account
#.   * Service Account Token Creator
#.   * Artifact Registry Writer
# 2. Generate service account key
#.   * In GitHub project -> Settings -> Secrets -> Actions -> New Repository Secret
#.     Name: GCP_SERVICE_ACCOUNT_KEY
#.     Value: key.json contents
# 3. Create repo in artifact repository 
#.   * Name: $env.GCP_AR_REPOSITORY below
#.   * Region: $env.GCP_AR_REGION below

name: Docker build and push to Artifact Registry

on:
  push:
    branches:
      - main

env:
  GCP_SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
  GCP_PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GCP_AR_REGION: ${{ vars.GCP_AR_REGION }}
  GCP_AR_REPOSITORY: ${{ vars.GCP_AR_REPOSITORY }}
  IMAGE: main

jobs:
  login-build-push:
    name: Docker login, build, and push
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: 'Docker build'
      run: |-
        docker build \
          --tag "${{ env.GCP_AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_AR_REPOSITORY }}/$IMAGE:$GITHUB_SHA" \
          app/
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.6.0'
      with:
        credentials_json: '${{ env.GCP_SERVICE_ACCOUNT_KEY }}'
        token_format: 'access_token'

    - uses: 'docker/login-action@v1'
      name: 'Docker login'
      with:
        registry: '${{ env.GCP_AR_REGION }}-docker.pkg.dev'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: 'Docker push'
      run: |-
        docker push "${{ env.GCP_AR_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_AR_REPOSITORY }}/$IMAGE:$GITHUB_SHA"